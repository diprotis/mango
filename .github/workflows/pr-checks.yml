name: PR Checks

on:
  pull_request:
    branches:
      - main
      - beta
      - develop

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/requirements*.txt
            **/pyproject.toml
      
      - name: Set up Python with uv
        run: |
          uv python install 3.10
          uv venv --python 3.10
      
      - name: Install dependencies
        run: |
          uv pip install -r infrastructure/requirements.txt
          uv pip install -r infrastructure/requirements-dev.txt
      
      - name: Run Black formatter check
        run: |
          source .venv/bin/activate
          black --check infrastructure/ src/ tests/
      
      - name: Run Flake8 linter
        run: |
          source .venv/bin/activate
          flake8 infrastructure/ src/ tests/
      
      - name: Run MyPy type checker
        run: |
          source .venv/bin/activate
          mypy infrastructure/ src/
        continue-on-error: true  # Don't fail on type errors initially
      
      - name: Run unit tests
        run: |
          source .venv/bin/activate
          pytest tests/unit/ -v --cov=infrastructure --cov=src --cov-report=xml
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false

  cdk-synth:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      
      - name: Set up Python with uv
        run: |
          uv python install 3.10
          uv venv --python 3.10
      
      - name: Install AWS CDK
        run: |
          npm install -g aws-cdk@latest
      
      - name: Install dependencies
        run: |
          uv pip install -r infrastructure/requirements.txt
      
      - name: CDK Synth Beta
        run: |
          source .venv/bin/activate
          cd infrastructure
          cdk synth -c stage=beta
      
      - name: CDK Synth Prod
        run: |
          source .venv/bin/activate
          cd infrastructure
          cdk synth -c stage=prod
      
      - name: Run cfn-lint on synthesized templates
        run: |
          source .venv/bin/activate
          uv pip install cfn-lint
          find infrastructure/cdk.out -name "*.template.json" -exec cfn-lint {} \;
        continue-on-error: true  # Don't fail on cfn-lint warnings initially

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy security scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
