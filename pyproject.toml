[tool.poetry]
name = "reading-journey-backend"
version = "0.1.0"
description = "Serverless AWS Backend for Personalized Reading Journeys"
authors = ["Your Team <team@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
aws-cdk-lib = "^2.110.0"
constructs = "^10.0.0"
boto3 = "^1.28.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
flake8 = "^6.1.0"
mypy = "^1.5.0"
pre-commit = "^3.3.3"
boto3-stubs = {extras = ["essential"], version = "^1.28.0"}

[tool.uv]
managed = true
compile = true

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --cov=infrastructure --cov=src --cov-report=html --cov-report=term"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
exclude = [".git", "__pycache__", "cdk.out", ".venv"]
ignore = ["E203", "W503"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
